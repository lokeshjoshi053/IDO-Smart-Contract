{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_totalTokens",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "enableBuyWithEth",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "enableBuyWithUsdt",
						"type": "uint256"
					}
				],
				"name": "PresaleCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PresalePaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "prevValue",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newValue",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PresaleTokenAddressUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PresaleUnpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "prevValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PresaleUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "purchaseToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensBought",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountPaid",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "TokensBought",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "TokensClaimed",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BASE_MULTIPLIER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MONTH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USDTInterface",
				"outputs": [
					{
						"internalType": "contract IERC20Upgradeable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "buyWithEth",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "buyWithUSDT",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_enableToBuyWithEth",
						"type": "uint256"
					}
				],
				"name": "changeEnableBuyWithEth",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_enableToBuyWithUsdt",
						"type": "uint256"
					}
				],
				"name": "changeEnableBuyWithUsdt",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "changePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					}
				],
				"name": "changeSaleTimes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_newAddress",
						"type": "address"
					}
				],
				"name": "changeSaleTokenAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_vestingStartTime",
						"type": "uint256"
					}
				],
				"name": "changeVestingStartTime",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "claim",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "users",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "claimMultiple",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "claimableAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_tokensToSell",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_baseDecimals",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_vestingStartTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_vestingCliff",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_vestingPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_enableBuyWithEth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_enableBuyWithUsdt",
						"type": "uint256"
					}
				],
				"name": "createPresale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ethBuyHelper",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ethAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLatestPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_usdt",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "pausePresale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "presale",
				"outputs": [
					{
						"internalType": "address",
						"name": "saleToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokensToSell",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "baseDecimals",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "inSale",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vestingStartTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vestingCliff",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vestingPeriod",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "enableBuyWithEth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "enableBuyWithUsdt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "presaleId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "unPausePresale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "usdtBuyHelper",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "usdPrice",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userVesting",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimedAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimStart",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimEnd",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"buyWithEth(uint256,uint256)": {
					"details": "To buy into a presale using ETH",
					"params": {
						"_id": "Presale id",
						"amount": "No of tokens to buy"
					}
				},
				"buyWithUSDT(uint256,uint256)": {
					"details": "To buy into a presale using USDT",
					"params": {
						"_id": "Presale id",
						"amount": "No of tokens to buy"
					}
				},
				"changeEnableBuyWithEth(uint256,uint256)": {
					"details": "To update possibility to buy with ETH",
					"params": {
						"_enableToBuyWithEth": "New value of enable to buy with ETH",
						"_id": "Presale id to update"
					}
				},
				"changeEnableBuyWithUsdt(uint256,uint256)": {
					"details": "To update possibility to buy with Usdt",
					"params": {
						"_enableToBuyWithUsdt": "New value of enable to buy with Usdt",
						"_id": "Presale id to update"
					}
				},
				"changePrice(uint256,uint256)": {
					"details": "To update the price",
					"params": {
						"_id": "Presale id to update",
						"_newPrice": "New sale price of the token"
					}
				},
				"changeSaleTimes(uint256,uint256,uint256)": {
					"details": "To update the sale times",
					"params": {
						"_endTime": "New end time",
						"_id": "Presale id to update",
						"_startTime": "New start time"
					}
				},
				"changeSaleTokenAddress(uint256,address)": {
					"details": "To update the sale token address",
					"params": {
						"_id": "Presale id to update",
						"_newAddress": "Sale token address"
					}
				},
				"changeVestingStartTime(uint256,uint256)": {
					"details": "To update the vesting start time",
					"params": {
						"_id": "Presale id to update",
						"_vestingStartTime": "New vesting start time"
					}
				},
				"claim(address,uint256)": {
					"details": "To claim tokens after vesting cliff from a presale",
					"params": {
						"_id": "Presale id",
						"user": "User address"
					}
				},
				"claimMultiple(address[],uint256)": {
					"details": "To claim tokens after vesting cliff from a presale",
					"params": {
						"_id": "Presale id",
						"users": "Array of user addresses"
					}
				},
				"claimableAmount(address,uint256)": {
					"details": "Helper funtion to get claimable tokens for a given presale.",
					"params": {
						"_id": "Presale id",
						"user": "User address"
					}
				},
				"constructor": {
					"custom:oz-upgrades-unsafe-allow": "constructor"
				},
				"createPresale(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
					"details": "Creates a new presale",
					"params": {
						"_baseDecimals": "No of decimals for the token. (10**18), for 18 decimal token",
						"_enableBuyWithEth": "Enable/Disable buy of tokens with ETH",
						"_enableBuyWithUsdt": "Enable/Disable buy of tokens with USDT",
						"_endTime": "end time of the sale",
						"_price": "Per token price multiplied by (10**18)",
						"_startTime": "start time of the sale",
						"_tokensToSell": "No of tokens to sell without denomination. If 1 million tokens to be sold then - 1_000_000 has to be passed",
						"_vestingCliff": "Cliff period for vesting in seconds",
						"_vestingPeriod": "Total vesting period(after vesting cliff) in seconds",
						"_vestingStartTime": "Start time for the vesting - UNIX timestamp"
					}
				},
				"ethBuyHelper(uint256,uint256)": {
					"details": "Helper funtion to get ETH price for given amount",
					"params": {
						"_id": "Presale id",
						"amount": "No of tokens to buy"
					}
				},
				"getLatestPrice()": {
					"details": "To get latest ethereum price in 10**18 format"
				},
				"initialize(address,address)": {
					"details": "Initializes the contract and sets key parameters",
					"params": {
						"_oracle": "Oracle contract to fetch ETH/USDT price",
						"_usdt": "USDT token contract address"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pausePresale(uint256)": {
					"details": "To pause the presale",
					"params": {
						"_id": "Presale id to update"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unPausePresale(uint256)": {
					"details": "To unpause the presale",
					"params": {
						"_id": "Presale id to update"
					}
				},
				"usdtBuyHelper(uint256,uint256)": {
					"details": "Helper funtion to get USDT price for given amount",
					"params": {
						"_id": "Presale id",
						"amount": "No of tokens to buy"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"IDO Smart Contract/Pre Sale/TokenPreSale.sol": "TokenPreSale"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
			"keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
				"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
			]
		},
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
				"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
				"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
			]
		},
		"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
			"license": "MIT",
			"urls": [
				"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
				"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
			"license": "MIT",
			"urls": [
				"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
				"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
			"license": "MIT",
			"urls": [
				"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
				"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"IDO Smart Contract/Pre Sale/TokenPreSale.sol": {
			"keccak256": "0xdf50c7b78ce1d871dd685a7b8c72f84dcc0c04942fd9ce0f401a959d66992286",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ac91d83faf8c8373b58c42f11ca41861f497e170aa4e1a9d9d917ae6fba712cf",
				"dweb:/ipfs/QmcDjKEP6Cto24HtRQwFFMHWADP5239FuSQVUwkKoQawqm"
			]
		}
	},
	"version": 1
}